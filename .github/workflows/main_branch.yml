name: Main Branch Workflow

on: 
  push:
    branches: [main]


# FIRST

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#     - name: Cache Maven Dependencies
#       uses: actions/cache@v2
#       with:
#         path: ~/.m2
#         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#     - name: Build with Maven
#       run: mvn clean package

#     - uses: actions/upload-artifact@v3
#       with:
#         name: verademo.war
#         path: target/verademo.war

#   policy-scan:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - uses: actions/checkout@v3
#       - name: get archive
#         uses: actions/download-artifact@v3
#         with:
#           name: verademo.war
#           path: .
#       - name: Veracoe Upload and Scan Action Step
#         uses: veracode/veracode-uploadandscan-action@master
#         id: upload_and_scan
#         with:
#           appname: 'VeraDemo - Web - GitHub'
#           createprofile: true
#           version: '${{ github.run_id }}'
#           filepath: 'verademo.war'
#           vid: '${{ secrets.API_ID }}'
#           vkey: '${{ secrets.API_KEY }}'
#           scantimeout: 15




# SECOND

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#     - name: Cache Maven Dependencies
#       uses: actions/cache@v2
#       with:
#         path: ~/.m2
#         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#     - name: Build with Maven
#       run: mvn clean package

#     - uses: actions/upload-artifact@v3
#       with:
#         name: verademo.war
#         path: target/verademo.war

#   policy-scan:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - uses: actions/checkout@v3
#       - name: get archive
#         uses: actions/download-artifact@v3
#         with:
#           name: verademo.war
#           path: .
#       - name: Veracoe Upload and Scan Action Step
#         uses: veracode/veracode-uploadandscan-action@master
#         id: upload_and_scan
#         with:
#           appname: 'VeraDemo - Web - GitHub'
#           createprofile: true
#           version: '${{ github.run_id }}'
#           filepath: 'verademo.war'
#           vid: '${{ secrets.API_ID }}'
#           vkey: '${{ secrets.API_KEY }}'
#           scantimeout: 15

#   veracode-sca-task:
#     runs-on: ubuntu-latest
#     name: Scan repository for Issues

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Run Veracode SCA
#         env:
#           SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
#         uses: veracode/veracode-sca@v1.09
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           create-issues: true
#           fail-on-cvss: 1
#           min-cvss-for-issue: 1


# THIRD

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Maven Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - name: Build with Maven
      run: mvn clean package

    - uses: actions/upload-artifact@v3
      with:
        name: verademo.war
        path: target/verademo.war

  policy-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: get archive
        uses: actions/download-artifact@v3
        with:
          name: verademo.war
          path: .
      - name: Veracoe Upload and Scan Action Step
        uses: veracode/veracode-uploadandscan-action@master
        id: upload_and_scan
        with:
          appname: 'VeraDemo - Web - GitHub'
          createprofile: true
          version: '${{ github.run_id }}'
          filepath: 'verademo.war'
          vid: '${{ secrets.API_ID }}'
          vkey: '${{ secrets.API_KEY }}'
          scantimeout: 15
        continue-on-error: true

  get-policy-flaws:
    runs-on: ubuntu-latest
    needs: policy-scan
    container: 
      image: veracode/api-signing:latest
    steps:
      # Note: this will only work up to about 500 flaws
      #		due to Veracode results limiting
      # See the get_flaws.sh script in the helpers directory
      #		for a more elaborate method
      - name: get policy flaws
        run: |
          cd /tmp
          export VERACODE_API_KEY_ID=${{ secrets.API_ID }}
          export VERACODE_API_KEY_SECRET=${{ secrets.API_KEY }}
          guid=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v1/applications?name=Verademo%20-%20Web%20-GitHub" | jq -r '._embedded.applications[0].guid') 
          echo GUID: ${guid}
          total_flaws=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True" | jq -r '.page.total_elements')
          echo TOTAL_FLAWS: ${total_flaws}
          http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True&size=${total_flaws}" > policy_flaws.json

      - name: save results file
        uses: actions/upload-artifact@v3
        with:
          name: policy-flaws
          path: /tmp/policy_flaws.json

  import-policy-flaws:
    needs: get-policy-flaws
    runs-on: ubuntu-latest
    steps:
      - name: get flaw file
        uses: actions/download-artifact@v3
        with:
          name: policy-flaws
          path: /tmp

      - name: import flaws as issues
        uses: veracode/veracode-flaws-to-issues@v1
        with:
          scan-results-json: '/tmp/policy_flaws.json'
          github-token: ${{ secrets.GITHUB_TOKEN }}

  veracode-sca-task:
    runs-on: ubuntu-latest
    name: Veracode Component Analysis

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Veracode SCA
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        uses: veracode/veracode-sca@v1.09
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          create-issues: true
          fail-on-cvss: 1
          min-cvss-for-issue: 1