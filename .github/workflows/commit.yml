# COMMIT WORKFLOW
# FIRST 
# name: Commit Workflow

on:
  push:
    branches:
      - 'features/**'

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-java@v1
#       with: 
#         java-version: 1.8
#     - name: Cache Maven packages
#       uses: actions/cache@v2
#       with:
#         path: ~/.m2
#         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#     - name: Build with Maven
#       run: mvn clean package
          
#     - uses: actions/upload-artifact@v3
#       with:
#         name: verademo.war
#         path: target/verademo.war

#   veracode-pipeline-scan:
#     needs: build
#     runs-on: ubuntu-latest
#     container: 
#       image: veracode/pipeline-scan:latest
#       options: --user root
#     steps:
#       - name: get archive
#         uses: actions/download-artifact@v3
#         with:
#           name: verademo.war
#           path: /tmp
#       - name: pipeline-scan
#         run: | 
#           java -jar /opt/veracode/pipeline-scan.jar \
#             -vid "${{secrets.API_ID}}" \
#             -vkey "${{secrets.API_KEY}}" \
#             --fail_on_severity="Very High, High" \
#             --file /tmp/verademo.war \
#             -jf results.json \
#             -fjf filtered_results.json 
#         continue-on-error: true
#       - name: save standard results
#         uses: actions/upload-artifact@v3
#         with:
#           name: PipelineScanResults
#           path: results.json
#       - name: save filtered results
#         uses: actions/upload-artifact@v3
#         with:
#           name: filtered-results
#           path: filtered_results.json


# SECOND

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-java@v1
#       with: 
#         java-version: 1.8
#     - name: Cache Maven packages
#       uses: actions/cache@v2
#       with:
#         path: ~/.m2
#         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#     - name: Build with Maven
#       run: mvn clean package
          
#     - uses: actions/upload-artifact@v3
#       with:
#         name: verademo.war
#         path: target/verademo.war

#   veracode-pipeline-scan:
#     needs: build
#     runs-on: ubuntu-latest
#     container: 
#       image: veracode/pipeline-scan:latest
#       options: --user root
#     steps:
#       - name: get archive
#         uses: actions/download-artifact@v3
#         with:
#           name: verademo.war
#           path: /tmp
#       - name: pipeline-scan
#         run: | 
#           java -jar /opt/veracode/pipeline-scan.jar \
#             -vid "${{secrets.API_ID}}" \
#             -vkey "${{secrets.API_KEY}}" \
#             --fail_on_severity="Very High, High" \
#             --file /tmp/verademo.war \
#             -jf results.json \
#             -fjf filtered_results.json 
#         continue-on-error: true
#       - name: save standard results
#         uses: actions/upload-artifact@v3
#         with:
#           name: PipelineScanResults
#           path: results.json
#       - name: save filtered results
#         uses: actions/upload-artifact@v3
#         with:
#           name: filtered-results
#           path: filtered_results.json

#   veracode-sca-task:
#     runs-on: ubuntu-latest
#     name: Scan repository for Issues

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Run Veracode SCA
#         env:
#           SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
#         uses: veracode/veracode-sca@v1.09
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           create-issues: true  
#           fail-on-cvss: 1
#           min-cvss-for-issue: 1


# THIRD

# name: Commit Workflow

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-java@v1
#       with: 
#         java-version: 1.8
#     - name: Cache Maven packages
#       uses: actions/cache@v2
#       with:
#         path: ~/.m2
#         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#     - name: Build with Maven
#       run: mvn clean package
          
#     - uses: actions/upload-artifact@v3
#       with:
#         name: verademo.war
#         path: target/verademo.war

#   veracode-pipeline-scan:
#     needs: build
#     runs-on: ubuntu-latest
#     container: 
#       image: veracode/pipeline-scan:latest
#       options: --user root
#     steps:
#       - name: get archive
#         uses: actions/download-artifact@v3
#         with:
#           name: verademo.war
#           path: /tmp
#       - name: pipeline-scan
#         run: | 
#           java -jar /opt/veracode/pipeline-scan.jar \
#             -vid "${{secrets.API_ID}}" \
#             -vkey "${{secrets.API_KEY}}" \
#             --fail_on_severity="Very High, High" \
#             --file /tmp/verademo.war \
#             -jf results.json \
#             -fjf filtered_results.json 
#         continue-on-error: true
#       - name: save standard results
#         uses: actions/upload-artifact@v3
#         with:
#           name: PipelineScanResults
#           path: results.json
#       - name: save filtered results
#         uses: actions/upload-artifact@v3
#         with:
#           name: filtered-results
#           path: filtered_results.json

#   import-issues:
#     needs: veracode-pipeline-scan
#     runs-on: ubuntu-latest
#     steps:
#       - name: get scan results
#         uses: actions/download-artifact@v3
#         with:
#           name: filtered-results

#       - name: import flaws as issues
#         uses: veracode/veracode-flaws-to-issues@v1
#         with:
#           scan-results-json: 'filtered_results.json'
#           github-token: ${{ secrets.GITHUB_TOKEN }}

#   veracode-sca-task:
#     runs-on: ubuntu-latest
#     name: Veracode Component Analysis

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Run Veracode SCA
#         env:
#           SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
#         uses: veracode/veracode-sca@v1.09
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           create-issues: true  
#           fail-on-cvss: 1
#           min-cvss-for-issue: 1


# FOURTH - SARIF

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-java@v1
#       with: 
#         java-version: 1.8
#     - name: Cache Maven packages
#       uses: actions/cache@v2
#       with:
#         path: ~/.m2
#         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#     - name: Build with Maven
#       run: mvn clean package
          
#     - uses: actions/upload-artifact@v3
#       with:
#         name: verademo.war
#         path: target/verademo.war

#   veracode-pipeline-scan:
#     needs: build
#     runs-on: ubuntu-latest
#     container: 
#       image: veracode/pipeline-scan:latest
#       options: --user root
#     steps:
#       - name: get archive
#         uses: actions/download-artifact@v3
#         with:
#           name: verademo.war
#           path: /tmp
#       - name: pipeline-scan
#         run: | 
#           java -jar /opt/veracode/pipeline-scan.jar \
#             -vid "${{secrets.API_ID}}" \
#             -vkey "${{secrets.API_KEY}}" \
#             --fail_on_severity="Very High, High" \
#             --file /tmp/verademo.war \
#             -jf results.json \
#             -fjf filtered_results.json 
#         continue-on-error: true
#       - name: save standard results
#         uses: actions/upload-artifact@v3
#         with:
#           name: PipelineScanResults
#           path: results.json
#       - name: save filtered results
#         uses: actions/upload-artifact@v3
#         with:
#           name: filtered-results
#           path: filtered_results.json

#   import-issues:
#     needs: veracode-pipeline-scan
#     runs-on: ubuntu-latest
#     steps:
#       - name: get scan results
#         uses: actions/download-artifact@v3
#         with:
#           name: filtered-results

#       - name: import flaws as issues
#         uses: veracode/veracode-flaws-to-issues@v1
#         with:
#           scan-results-json: 'filtered_results.json'
#           github-token: ${{ secrets.GITHUB_TOKEN }}

#   import-findings-to-code-scanning-alerts:
#     needs: veracode-pipeline-scan
#     runs-on: ubuntu-latest
#     steps:  
#       - name: get scan results
#         uses: actions/download-artifact@v3
#         with:
#           name: PipelineScanResults
#       - name: Convert pipeline scan output to SARIF format 
#         id: convert
#         uses: veracode/veracode-pipeline-scan-results-to-sarif@v0.1.5
#         with:
#           pipeline-results-json: results.json
#           source-base-path-1: "^com/veracode:src/main/java/com/veracode"
#           source-base-path-2: "^WEB-INF:src/main/webapp/WEB-INF"
#       - uses: github/codeql-action/upload-sarif@v1
#         with:
#           sarif_file: veracode-results.sarif

#   veracode-sca-task:
#     runs-on: ubuntu-latest
#     name: Veracode Component Analysis

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Run Veracode SCA
#         env:
#           SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
#         uses: veracode/veracode-sca@v1.09
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           create-issues: true  
#           fail-on-cvss: 1
#           min-cvss-for-issue: 1



# FITH


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v1
      with: 
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - name: Build with Maven
      run: mvn clean package
          
    - uses: actions/upload-artifact@v3
      with:
        name: verademo.war
        path: target/verademo.war

  veracode-pipeline-scan:
    needs: build
    runs-on: ubuntu-latest
    container: 
      image: veracode/pipeline-scan:latest
      options: --user root
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: get archive
        uses: actions/download-artifact@v3
        with:
          name: verademo.war
          path: /tmp
      - name: pipeline-scan
        run: | 
          java -jar /opt/veracode/pipeline-scan.jar \
            -vid "${{secrets.API_ID}}" \
            -vkey "${{secrets.API_KEY}}" \
            --fail_on_severity="Very High, High" \
            --file /tmp/verademo.war \
            -bf ./results.json \
            -jf results.json \
            -fjf filtered_results.json 
        continue-on-error: true
      - name: save standard results
        uses: actions/upload-artifact@v3
        with:
          name: PipelineScanResults
          path: results.json
      - name: save filtered results
        uses: actions/upload-artifact@v3
        with:
          name: filtered-results
          path: filtered_results.json

  import-issues:
    needs: veracode-pipeline-scan
    runs-on: ubuntu-latest
    steps:
      - name: get scan results
        uses: actions/download-artifact@v3
        with:
          name: filtered-results

      - name: import flaws as issues
        uses: veracode/veracode-flaws-to-issues@v1
        with:
          scan-results-json: 'filtered_results.json'
          github-token: ${{ secrets.GITHUB_TOKEN }}

  import-findings-to-code-scanning-alerts:
    needs: veracode-pipeline-scan
    runs-on: ubuntu-latest
    steps:  
      - name: get scan results
        uses: actions/download-artifact@v3
        with:
          name: PipelineScanResults
      - name: Convert pipeline scan output to SARIF format 
        id: convert
        uses: veracode/veracode-pipeline-scan-results-to-sarif@v0.1.5
        with:
          pipeline-results-json: results.json
          source-base-path-1: "^com/veracode:src/main/java/com/veracode"
          source-base-path-2: "^WEB-INF:src/main/webapp/WEB-INF"
      - uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: veracode-results.sarif

  veracode-sca-task:
    runs-on: ubuntu-latest
    name: Veracode Component Analysis

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Veracode SCA
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        uses: veracode/veracode-sca@v1.09
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          create-issues: true  
          fail-on-cvss: 1
          min-cvss-for-issue: 1
